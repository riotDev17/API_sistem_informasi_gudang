// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id_admin   String   @id @default(uuid())
  nama_admin String   @db.VarChar(50)
  username   String   @db.VarChar(50)
  password   String   @db.VarChar(100)
  foto_admin String?  @db.Text
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("admin")
}

model Agama {
  id_agama   String     @id @default(uuid())
  nama_agama String     @db.VarChar(50)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  Karyawan   Karyawan[]

  @@map("agama")
}

model Karyawan {
  id_karyawan       String              @id @default(uuid())
  no_karyawan       Int                 @db.Integer
  nama_karyawan     String              @db.VarChar(50)
  jenis_kelamin     String              @db.VarChar(25)
  tempat_lahir      String              @db.Text
  tanggal_lahir     DateTime            @db.Date
  tanggal_masuk     DateTime            @db.Date
  id_agama          String
  agama             Agama               @relation(fields: [id_agama], references: [id_agama])
  alamat            String              @db.Text
  no_telp           Int                 @db.Integer
  foto_karyawan     String?             @db.Text
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  PengambilanBarang PengambilanBarang[]

  @@map("karyawan")
}

model KategoriBarang {
  id_kategori_barang   String   @id @default(uuid())
  nama_kategori_barang String   @db.VarChar(50)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  Barang               Barang[]

  @@map("kategori_barang")
}

model SatuanBarang {
  id_satuan_barang   String   @id @default(uuid())
  nama_satuan_barang String   @db.VarChar(50)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  Barang             Barang[]

  @@map("satuan_barang")
}

model Pemasok {
  id_pemasok          String   @id @default(uuid())
  nama_pemasok        String   @db.VarChar(50)
  nama_kontak_pemasok String   @db.VarChar(50)
  no_telp             Int      @db.Integer
  alamat              String   @db.Text
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  Barang              Barang[]

  @@map("pemasok")
}

model Barang {
  id_barang          String              @id @default(uuid())
  kode_barang        String              @db.VarChar(50)
  nama_barang        String              @db.VarChar(50)
  id_kategori_barang String
  kategori_barang    KategoriBarang      @relation(fields: [id_kategori_barang], references: [id_kategori_barang])
  stok_barang        Int                 @db.Integer
  id_satuan_barang   String
  satuan_barang      SatuanBarang        @relation(fields: [id_satuan_barang], references: [id_satuan_barang])
  lokasi_barang      String              @db.Text
  id_pemasok         String
  pemasok            Pemasok             @relation(fields: [id_pemasok], references: [id_pemasok])
  keterangan_barang  String              @db.Text
  foto_barang        String?             @db.Text
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  PengambilanBarang  PengambilanBarang[]
  BarangMasuk        BarangMasuk[]

  @@map("barang")
}

model PengambilanBarang {
  id_pengambilan_barang      String   @id @default(uuid())
  tanggal_pengambilan_barang DateTime @db.Date
  id_barang                  String
  barang                     Barang   @relation(fields: [id_barang], references: [id_barang])
  id_karyawan                String
  karyawan                   Karyawan @relation(fields: [id_karyawan], references: [id_karyawan])
  jumlah_pengambilan_barang  Int      @db.Integer
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt

  @@map("pengambilan_barang")
}

model BarangMasuk {
  id_barang_masuk      String   @id @default(uuid())
  tanggal_barang_masuk DateTime @db.Date
  id_barang            String
  barang               Barang   @relation(fields: [id_barang], references: [id_barang])
  jumlah_barang_masuk  Int      @db.Integer
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@map("barang_masuk")
}
